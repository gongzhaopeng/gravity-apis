openapi: 3.0.0
info:
  version: "genesis"
  title: 'Preference Service'
  description: 'Gravity:Preference-Service对应的API.'
  contact:
    email: 'gongguochuanqi@gmail.com'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: Development Environment.
    url: http://sd1.benbenedu.cn:9000/preference/genesis
tags:
  - name: Me
    description: 访问个人账户.
paths:
  /login/wechat/mini:
    post:
      tags: 
        - Me
      summary: 通过微信小程序登录.
      description: |
        通过微信小程序登录.
        
        # 处理逻辑:
        1. 通过jscode调用微信开放平台接口获取微信登录Session  
        2. 通过微信登录Session中的wechat-unionid查看本地是否已创建过对应账号  
          2.1 若本地无对应账号，则调用中台账户服务的相关接口创建对应账号，成功后在本地创建相应用户  
        3. 返回接口响应中定义的相关信息
      operationId: loginByWechatMini
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WechatMiniLoginReq'
      responses:
        '200':
          description: 登录成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatMiniLoginResp'
        '400':
          description: Bad Request.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidWechatJsCode:
                  value:
                    code: 'InvalidWechatJsCode'
                    detail: '${detail}'
components:
  schemas:
    WechatMiniLoginReq:
      type: object
      description: |
        通过微信小程序登录时的请求信息.
      properties:
        jscode:
          type: string
        nickName:
          $ref: '#/components/schemas/AccountNickname'
        gender:
          $ref: '#/components/schemas/Gender'
        country:
          $ref: '#/components/schemas/Country'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
      required:
        - jscode
        - nickName
    WechatMiniLoginResp:
      type: object
      description: |
        通过微信小程序登录成功时的响应.
      properties:
        wechatUnionid:
          type: string
        token:
          $ref: '#/components/schemas/WechatAuthToken'
        wechatOpenid:
          type: string
        wechatSessionKey:
          type: string
      required: 
        - wechatUnionid
        - token
        - wechatOpenid
        - wechatSessionKey
    PreferUser:
      type: object
      description: |
        志愿产品对应的用户.
      properties:
        unionid:
          type: string
          description: |
            $ref: '#/components/schemas/SundialUnionId'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        wechat:
          $ref: '#/components/schemas/WechatInfo'
    SundialUnionId:
      type: string
      description: |
        Sundial平台上对应账户的ID.   
    WechatInfo:
      type: object
      description: 账户关联的微信信息.
      properties:
        unionid:
          type: string
          description: wechat-unionid
        token:
          $ref: '#/components/schemas/WechatAuthToken'
        mini:
          $ref: '#/components/schemas/WechatMiniLogin'
      required: 
        - unionid
        - token
    WechatAuthToken:
      type: string
      description: |
        通过wechat-unionid在Sundial平台上创建对应账户时返回的用于认证的token.
    WechatMiniLogin:
      type: object
      description: 微信小程序登录信息.
      properties:
        openid:
          type: string
        loginAt:
          $ref: '#/components/schemas/Timestamp'
        sessionKey:
          type: string
    AccountNickname:
      type: string
      description: 账户昵称.
      minLength: 1
      maxLength: 25
    Country:
      type: string
      description: |
        The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
      enum:
        - CN
      minLength: 2
      maxLength: 2
    Province:
      type: string
      description: 省.
      minLength: 1
      maxLength: 50
    City:
      type: string
      description: 市.
      minLength: 1
      maxLength: 50
    URL:
      type: string
      description: URL.
      minLength: 1
      maxLength: 250
    Gender:
      type: string
      description: 性取向.
      enum:
        - Masculine
        - Feminine
        - Neutral
      minLength: 1
      maxLength: 50
    Timestamp:
      type: integer
      format: int64
      description: 时间戳.
    ObjectID:
      type: string
      description: MongoDB:ObjectId
      minLength: 24
      maxLength: 24
    ErrorResponse:
      description: 错误响应.
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
        detail:
          type: string
          description: 错误详情.
      required:
        - code
    ErrorResponseCode:
      type: string
      description: 错误码.
      enum: 
        - Undefined
        - AccessLimited
        - LUTimeConflict
        - InvalidWechatJsCode
    IdAnyMatchQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定的id集合. =relation=>any-match.
      minLength: 1
      maxLength: 50
    IdAllMatchQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定的id集合. =relation=>all-match.
      minLength: 1
      maxLength: 50
    TimeQueryField:
      type: array
      items:
        type: integer
        format: int64
      description: 指定时间所属的区间序列. =relation=>in. 数组长度必须为偶数.
      minLength: 2
      maxLength: 20
    TextSearchSpec:
      type: object
      description: 文本搜索描述对象.
      properties:
        include:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
        exclude:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
    TextAnyMatchQueryField:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 150
      description: 指定的Text集合. =relation=>any-match.
      minLength: 1
      maxLength: 50
    DateQueryField:
      type: array
      items:
        type: string
        format: date
      description: 指定时日期的区间序列. =relation=>in. 数组长度必须为偶数.
      minLength: 2
      maxLength: 20
    BasicPage:
      type: object
      description: 分页基本信息.
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
      required: 
        - totalPages
        - totalElements
    PageNumberSpec:
      type: integer
      format: int32
      minimum: 0
      default: 0
    PageSizeSpec:
      type: integer
      format: int32
      minimum: 1
      maximum: 100
      default: 10
    PageSortWithDefaultCreateTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'createTime,desc'
    PageSortWithDefaultLUTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'lUTime,desc'
        
        
  securitySchemes:
    accountCenterAuth:
      type: oauth2
      flows:
        password:
          tokenUrl: "http://sd1.benbenedu.cn:9000/xauth/oauth/token"
          scopes:
            'client:public': 公开的客户端
  
            
  parameters:
    pageNumber:
      name: page
      in: query
      description: 指定页码.
      schema:
        $ref: '#/components/schemas/PageNumberSpec'
    pageSize:
      name: size
      in: query
      description: 指定页长.
      schema:
        $ref: '#/components/schemas/PageSizeSpec'
    pageSortWithDefaultCreateTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultCreateTimeDescSpec'
      style: form
      explode: true
    pageSortWithDefaultLUTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultLUTimeDescSpec'
      style: form
      explode: true
