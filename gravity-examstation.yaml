openapi: 3.0.0
info:
  version: 'genesis'
  title: 'ExamStation Service API'
  description: 'Gravity:ExamStation-Service对应的API.'
  contact:
    email: gongguochuanqi@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: http://sundial.benbenedu.cn:9001/examstation/genesis
tags:
  - name: Exam
    description: 访问考试.
  - name: ExamChain
    description: 访问考试链.
  - name: AssessToken
    description: 访问AssessToken.
  - name: WhiteList
    description: 访问WhiteList.
  - name: ExamAticket
    description: 访问考试准考证.
  - name: EchainAticket
    description: 访问考试链准考证
  - name: ExamPaper
    description: 访问试卷.
  - name: AnswerSheet
    description: 访问答卷.
paths:
  /exams/{exam-id}/load:
    post:
      tags:
        - Exam
      summary: 加载指定的考试.
      description: |
        加载指定的考试.
        检查epMoldPool中的EpMold是否已经加载,若未加载,则须对其进行加载.
        加载EmpMold时,若其yieldingMode为Definite,则为其预生成对应的唯一的通用ExamPaper.
      operationId: loadExamById
      parameters: 
        - name: exam-id
          in: path
          description: 指定考试的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '204':
          description: 加载成功.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试不存在.
      security:
        - examStationAuth: 
          - client:inner
  /exams/query:
    post:
      tags: 
        - Exam
      summary: Query考试.
      description: Query考试.
      operationId: queryExams
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - examStationAuth: 
          - client:inner
  /exams/{exam-id}:
    get:
      tags:
        - Exam
      summary: 获取指定的考试详情.
      description: |
        获取指定的考试详情.
      operationId: getExamById
      parameters: 
        - name: exam-id
          in: path
          description: 指定考试的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试不存在.
      security:
        - examStationAuth: 
          - client:inner
  /exams/{exam-id}/pub:
    get:
      tags:
        - Exam
      summary: 获取指定考试的公开信息.
      description: |
        获取指定考试的公开信息.
      operationId: getPubExamById
      parameters: 
        - name: exam-id
          in: path
          description: 指定考试的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubExam'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试不存在.
      security:
        - examStationAuth: 
          - client:inner
  /examchains/{examchain-id}/load:
    post:
      tags:
        - ExamChain
      summary: 加载指定的考试链.
      description: |
        加载指定的考试链.
      operationId: loadExamChainById
      parameters: 
        - name: examchain-id
          in: path
          description: 指定考试链的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '204':
          description: 加载成功.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试链不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                DependencyMissed:
                  value:
                    code: 'DependencyMissed'
                    detail: '${detail}'
                  description: |
                    加载考试链时, 所依赖的考试必须已经被加载为最新状态.
      security:
        - examStationAuth: 
          - client:inner
  /examchains/query:
    post:
      tags: 
        - ExamChain
      summary: Query考试链.
      description: Query考试链.
      operationId: queryExamChains
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamChainQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamChainPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - examStationAuth: 
          - client:inner
  /examchains/{examchain-id}:
    get:
      tags:
        - ExamChain
      summary: 获取指定的考试链详情.
      description: |
        获取指定的考试链详情.
      operationId: getExamChainById
      parameters: 
        - name: examchain-id
          in: path
          description: 指定考试链的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamChain'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试链不存在.
      security:
        - examStationAuth: 
          - client:inner
  /examchains/{examchain-id}/pub:
    get:
      tags:
        - ExamChain
      summary: 获取指定考试链的公开信息.
      description: |
        获取指定考试链的公开信息.
      operationId: getPubExamChainById
      parameters: 
        - name: examchain-id
          in: path
          description: 指定考试链的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubExamChain'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试链不存在.
      security:
        - examStationAuth: 
          - client:inner
  /whitelist/items:
    post:
      tags:
        - WhiteList
      summary: 添加Whitelist-Items.
      description: |
        添加Whitelist-Items.
      operationId: addWhitelistItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhitelistItemsAddingReq'
      responses:
        '201':
          description: 添加成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhitelistItemsAddedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchExamForm:
                  value:
                    code: 'UnmatchExamForm'
                    detail: '${detail}'
                unmatchEchainForm:
                  value:
                    code: 'UnmatchEchainForm'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /whitelist/items/query:
    post:
      tags:
        - WhiteList
      summary: Query白名单项.
      description: Query白名单项.
      operationId: queryWhitelistItems
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhitelistItemQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhitelistItemPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - examStationAuth: 
          - client:inner
  /whitelist/items/{item-id}:
    get:
      tags:
        - WhiteList
      summary: 获取指定的白名单项详情.
      description: |
        获取指定的白名单项详情.
      operationId: getWhitelistItemById
      parameters: 
        - name: item-id
          in: path
          description: 指定白名单项的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhitelistItem'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的白名单项不存在.
      security:
        - examStationAuth: 
          - client:inner
    delete:
      tags:
        - WhiteList
      summary: 删除指定的白名单项.
      description: |
        删除指定的白名单项.
      operationId: removeWhitelistItemById
      parameters: 
        - name: item-id
          in: path
          description: 指定白名单项的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '204':
          description: 删除成功.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的白名单项不存在.
      security:
        - examStationAuth: 
          - client:inner
  /assesstokens:
    post:
      tags:
        - AssessToken
      summary: 生成AssessTokens.
      description: |
        生成AssessTokens.
      operationId: generateAssessTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessTokensGeneratingReq'
      responses:
        '201':
          description: 生成成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessTokensGeneratedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - examStationAuth: 
          - client:inner
  /assesstokens/query:
    post:
      tags:
        - AssessToken
      summary: Query AssessToken.
      description: Query AssessToken.
      operationId: queryAssessTokens
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessTokenQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessTokenPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - examStationAuth: 
          - client:inner
  /assesstokens/taking:
    post:
      tags:
        - AssessToken
      summary: 取占AssessTokens.
      description: 取占AssessTokens.
      operationId: takeAssessTokens
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessTokensTakingReq'
      responses:
        '200':
          description: 请求被正常处理.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessTokensTakenResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - examStationAuth: 
          - client:inner
  /assesstokens/{assesstoken-id}:
    get:
      tags:
        - AssessToken
      summary: 获取指定的AssessToken详情.
      description: 获取指定的AssessToken详情.
      operationId: getAssessTokenById
      parameters: 
        - name: assesstoken-id
          in: path
          description: 指定AssessToken的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessToken'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的AssessToken不存在.
      security:
        - examStationAuth: 
          - client:inner
  /examtickets/of/form/enclosed:
    post:
      tags:
        - ExamAticket
      summary: 创建Enclosed型考试的准考证.
      description: |
        ### Enclosed型考试准考证核发
        #### **基本约束**
        - 目标考试为Enclosed型.
        - 当前认证用户对目标考试未达到最大参考次数.
        - 若目标考试设置了开考时间,则目标考试必须未开考.
        #### **申领方式**
        - 经由AssessToken兑换其适用的特定考试的准考证.  
          **约束条件**
          - 出示的AssessToken适用目标考试.
          - 出示的AssessToken未被兑换.
          - 出示的AssessToken未过期.
        - 经由EchainAticket申领其对应的考试链所包含的考试的准考证.  
          **约束条件**
          - 出示的EchainAticket属于当前认证用户.
          - 出示的EchainAticket对应考试链下的考试序列中包含目标考试.
        - 当前认证用户已被添加到指定考试对应的白名单上时,可直接申领.  
          **约束条件**
          - 当前认证用户在目标考试对应的白名单上.
        ### 其它注意事项
        #### **自动完善准考证信息**
        - 对于请求中未提供的考试准考证相关信息,自动从账户信息(和考试链准考证信息)中获取并完善.
        - 各信息源的优先级  考试链准考证信息 > 账户信息.
        #### **经由EchainAticket核发ExamAticket时,须更新EchainAticket中的相关内容**
      operationId: acquireEnclosedExamAticket
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnclosedExamAticketAcqReq'
      responses:
        '200':
          description: |
            请求已被处理,但准考证未予核发.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                examAticketGrantingDeny:
                  value:
                    code: 'ExamAticketGrantingDeny'
                    detail: '${detail}'
        '201':
          description: |
            成功核发准考证.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 对应的考试不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchExamForm:
                  value:
                    code: 'UnmatchExamForm'
                    detail: '${detail}'
                exceedExamMRTsLimit:
                  value:
                    code: 'ExceedExamMRTsLimit'
                    detail: '${detail}'
                  description: '超过了考试的最大重复次数限制.'
                outOfExamAticketAcqDuration:
                  value:
                    code: 'OutOfExamAticketAcqDuration'
                    detail: '${detail}'
                  description: '未处在ExamAticket申领时间段内.'
                invalidAssessToken:
                  value:
                    code: 'InvalidAssessToken'
                    detail: '${detail}'
                invalidEchainAticket:
                  value:
                    code: 'InvalidEchainAticket'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /examtickets/of/form/cooperate:
    post:
      tags:
        - ExamAticket
      summary: 创建Cooperate型考试的准考证.
      description: |
        ### Cooperate型考试准考证核发
        #### **基本约束**
        - 目标考试为Cooperate型.
        - 当前认证客户端的owner为目标考试的owner.
        - 指定的参考人对目标考试未达到最大参考次数.
        - 若目标考试设置了开考时间,则目标考试必须未开考.
        #### **申领方式**
        - 经由EchainAticket申领其对应的考试链所包含的考试的准考证.  
          **约束条件**
          - 出示的EchainAticket属于指定的参考人.
          - 出示的EchainAticket对应考试链下的考试序列中包含目标考试.
        - 直接申领.  
        ### 其它注意事项
        #### **自动完善准考证信息**
        - 对于请求中未提供的考试准考证相关信息,自动从账户信息(和考试链准考证信息)中获取并完善.
        - 各信息源的优先级  考试链准考证信息 > 账户信息.
        #### **经由EchainAticket核发ExamAticket时,须更新EchainAticket中的相关内容**
      operationId: acquireCooperateExamAticket
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CooperateExamAticketAcqReq'
      responses:
        '200':
          description: |
            请求已被处理,但准考证未予核发.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                examAticketGrantingDeny:
                  value:
                    code: 'ExamAticketGrantingDeny'
                    detail: '${detail}'
        '201':
          description: |
            成功核发准考证.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: |
            ### 对应的情况
            - 指定的参考人不存在.
            - 目标考试不存在或目标考试的owner不是当前认证客户端的owner.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchExamForm:
                  value:
                    code: 'UnmatchExamForm'
                    detail: '${detail}'
                exceedExamMRTsLimit:
                  value:
                    code: 'ExceedExamMRTsLimit'
                    detail: '${detail}'
                  description: '超过了考试的最大重复次数限制.'
                outOfExamAticketAcqDuration:
                  value:
                    code: 'OutOfExamAticketAcqDuration'
                    detail: '${detail}'
                  description: '未处在ExamAticket申领时间段内.'
                invalidEchainAticket:
                  value:
                    code: 'InvalidEchainAticket'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /examtickets/of/form/public:
    post:
      tags:
        - ExamAticket
      summary: 创建Public型考试的准考证.
      description: |
        ### Public型考试准考证核发
        #### **基本约束**
        - 目标考试为Public型.
        - 当前认证用户对目标考试未达到最大参考次数.
        - 若目标考试设置了开考时间,则目标考试必须未开考.
        #### **申领方式**
        - 经由EchainAticket申领其对应的考试链所包含的考试的准考证.  
          **约束条件**
          - 出示的EchainAticket属于当前认证用户.
          - 出示的EchainAticket对应考试链下的考试序列中包含目标考试.
        - 直接申领.  
        ### 其它注意事项
        #### **自动完善准考证信息**
        - 对于请求中未提供的考试准考证相关信息,自动从账户信息(和考试链准考证信息)中获取并完善.
        - 各信息源的优先级  考试链准考证信息 > 账户信息.
        #### **经由EchainAticket核发ExamAticket时,须更新EchainAticket中的相关内容**
      operationId: acquirePublicExamAticket
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicExamAticketAcqReq'
      responses:
        '200':
          description: |
            请求已被处理,但准考证未予核发.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                examAticketGrantingDeny:
                  value:
                    code: 'ExamAticketGrantingDeny'
                    detail: '${detail}'
        '201':
          description: |
            成功核发准考证.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 对应的考试不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchExamForm:
                  value:
                    code: 'UnmatchExamForm'
                    detail: '${detail}'
                exceedExamMRTsLimit:
                  value:
                    code: 'ExceedExamMRTsLimit'
                    detail: '${detail}'
                  description: '超过了考试的最大重复次数限制.'
                outOfExamAticketAcqDuration:
                  value:
                    code: 'OutOfExamAticketAcqDuration'
                    detail: '${detail}'
                  description: '未处在ExamAticket申领时间段内.'
                invalidEchainAticket:
                  value:
                    code: 'InvalidEchainAticket'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /examtickets/{examticket-id}:
    get:
      tags:
        - ExamAticket
      summary: 获取指定ExamAticket的详情.
      description: 获取指定ExamAticket的详情.
      operationId: getExamAticketById
      parameters: 
        - name: examticket-id
          in: path
          description: 指定ExamAticket的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAticket'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的ExamAticket不存在.
      security:
        - examStationAuth: 
          - client:inner
    put:
      tags:
        - ExamAticket
      summary: 更新指定ExamAticket的信息.
      description: 更新指定ExamAticket的信息.
      operationId: updateExamAticketById
      parameters: 
        - name: examticket-id
          in: path
          description: 指定ExamAticket的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAticketUpdatingReq'
      responses:
        '200':
          description: 更新成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的ExamAticket不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /examtickets/of/exam/{exam-id}:
    get:
      tags:
        - ExamAticket
      summary: 获取指定参考人的指定考试的准考证集.
      description: |
        ### 按指定考试的form不同分为以下两种情况
        - Cooperate型考试  
          通过query参数owner-id指定准考证的owner.  
          **约束条件**  
          - 目标考试为Cooperate型.
          - 当前认证客户端的owner为目标考试的owner.
        - 非Cooperate型考试
          当前认证用户为准考证的owner.  
          **约束条件**
          - 目标考试为非Cooperate型.
      parameters:
        - name: exam-id
          in: path
          description: 指定考试的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
        - name: owner-id
          in: query
          description: 指定准考证所有者的ID.
          required: false
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamAticket'
                minLength: 0
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试或准考证owner不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchExamForm:
                  value:
                    code: 'UnmatchExamForm'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /echaintickets/of/form/enclosed:
    post:
      tags:
        - EchainAticket
      summary: 创建Enclosed型考试链的准考证.
      description: |
        ### Enclosed型考试链准考证核发
        #### **基本约束**
        - 目标考试链为Enclosed型.
        - 当前认证用户没有目标考试链对应的准考证.
        #### **申领方式**
        - 经由AssessToken兑换其适用的特定考试链的准考证.  
          **约束条件**
          - 出示的AssessToken适用目标考试链.
          - 出示的AssessToken未被兑换.
          - 出示的AssessToken未过期.
        - 当前认证用户已被添加到指定考试链对应的白名单上时,可直接申领.  
          **约束条件**
          - 当前认证用户在目标考试链对应的白名单上.
        ### 其它注意事项
        #### **自动完善准考证信息**
        - 对于请求中未提供的考试链准考证相关信息,自动从账户信息中获取并完善.
      operationId: acquireEnclosedEchainAticket
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnclosedEchainAticketAcqReq'
      responses:
        '200':
          description: |
            请求已被处理,但准考证未予核发.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                echainAticketGrantingDeny:
                  value:
                    code: 'EchainAticketGrantingDeny'
                    detail: '${detail}'
        '201':
          description: |
            成功核发准考证.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchainAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 对应的考试链不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchEchainForm:
                  value:
                    code: 'UnmatchEchainForm'
                    detail: '${detail}'
                duplicateCreating:
                  value:
                    code: 'DuplicateCreating'
                    detail: '${detail}'
                invalidAssessToken:
                  value:
                    code: 'InvalidAssessToken'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /echaintickets/of/form/cooperate:
    post:
      tags:
        - EchainAticket
      summary: 创建Cooperate型考试链的准考证.
      description: |
        ### Cooperate型考试链准考证核发
        #### **基本约束**
        - 目标考试链为Cooperate型.
        - 当前认证客户端的owner为目标考试链的owner.
        - 指定的参考人没有目标考试链对应的准考证.
        #### **申领方式**
        - 直接申领.  
        ### 其它注意事项
        #### **自动完善准考证信息**
        - 对于请求中未提供的考试链准考证相关信息,自动从账户信息中获取并完善.
      operationId: acquireCooperateEchainAticket
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CooperateEchainAticketAcqReq'
      responses:
        '200':
          description: |
            请求已被处理,但准考证未予核发.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                echainAticketGrantingDeny:
                  value:
                    code: 'EchainAticketGrantingDeny'
                    detail: '${detail}'
        '201':
          description: |
            成功核发准考证.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchainAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: |
            ### 对应的情况
            - 指定的参考人不存在.
            - 目标考试链不存在或目标考试链的owner不是当前认证客户端的owner.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchEchainForm:
                  value:
                    code: 'UnmatchEchainForm'
                    detail: '${detail}'
                duplicateCreating:
                  value:
                    code: 'DuplicateCreating'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /echaintickets/of/form/public:
    post:
      tags:
        - EchainAticket
      summary: 创建Public型考试链的准考证.
      description: |
        ### Public型考试链准考证核发
        #### **基本约束**
        - 目标考试链为Public型.
        - 当前认证用户没有目标考试链对应的准考证.
        #### **申领方式**
        - 直接申领.  
        ### 其它注意事项
        #### **自动完善准考证信息**
        - 对于请求中未提供的考试链准考证相关信息,自动从账户信息中获取并完善.
      operationId: acquirePublicEchainAticket
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicEchainAticketAcqReq'
      responses:
        '200':
          description: |
            请求已被处理,但准考证未予核发.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                echainAticketGrantingDeny:
                  value:
                    code: 'EchainAticketGrantingDeny'
                    detail: '${detail}'
        '201':
          description: |
            成功核发准考证.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchainAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 对应的考试链不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchEchainForm:
                  value:
                    code: 'UnmatchEchainForm'
                    detail: '${detail}'
                duplicateCreating:
                  value:
                    code: 'DuplicateCreating'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /echaintickets/{echainticket-id}:
    get:
      tags:
        - EchainAticket
      summary: 获取指定EchainAticket的详情.
      description: 获取指定EchainAticket的详情.
      operationId: getEchainAticketById
      parameters: 
        - name: echainticket-id
          in: path
          description: 指定EchainAticket的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchainAticket'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的EchainAticket不存在.
      security:
        - examStationAuth: 
          - client:inner
    put:
      tags:
        - EchainAticket
      summary: 更新指定EchainAticket的信息.
      description: 更新指定EchainAticket的信息.
      operationId: updateEchainAticketById
      parameters: 
        - name: echainticket-id
          in: path
          description: 指定EchainAticket的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EchainAticketUpdatingReq'
      responses:
        '200':
          description: 更新成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchainAticket'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的EchainAticket不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /echaintickets/of/echain/{echain-id}:
    get:
      tags:
        - EchainAticket
      summary: 获取指定参考人的指定考试链的准考证集.
      description: |
        ### 按指定考试链的form不同分为以下两种情况
        - Cooperate型考试链  
          通过query参数owner-id指定准考证的owner.  
          **约束条件**  
          - 目标考试链为Cooperate型.
          - 当前认证客户端的owner为目标考试链的owner.
        - 非Cooperate型考试链
          当前认证用户为准考证的owner.  
          **约束条件**
          - 目标考试链为非Cooperate型.
      operationId: getEchainAticketsByEchainAndOwner
      parameters:
        - name: echain-id
          in: path
          description: 指定考试链的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
        - name: owner-id
          in: query
          description: 指定准考证所有者的ID.
          required: false
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EchainAticket'
                minLength: 0
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试链或准考证owner不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unmatchEchainForm:
                  value:
                    code: 'UnmatchEchainForm'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /exampapers/to/ticket/{ticket-id}:
    get:
      tags:
        - ExamPaper
      summary: 获取指定考试准考证对应的试卷.
      description: 获取指定考试准考证对应的试卷.
      operationId: getExamPaperByExamAticket
      parameters:
        - name: ticket-id
          in: path
          description: 指定考试准考证的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamPaper'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试准考证不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                outOfPaperFetchDuration:
                  value:
                    code: 'OutOfPaperFetchDuration'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /answersheets:
    post:
      tags:
        - AnswerSheet
      summary: 提交答卷.
      description: 提交答卷.
      operationId: submitAnswerSheet
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerSheetSubmission'
      responses:
        '201':
          description: 提交成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerSheetCreatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidExamAticket:
                  value:
                    code: 'InvalidExamAticket'
                    detail: '${detail}'
                duplicateCreating:
                  value:
                    code: 'DuplicateCreating'
                    detail: '${detail}'
                outOfAnswerSheetSubmitDuration:
                  value:
                    code: 'OutOfAnswerSheetSubmitDuration'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /answersheets/to/ticket/{ticket-id}:
    get:
      tags:
        - AnswerSheet
      summary: 获取指定考试准考证对应的答卷.
      description: 获取指定考试准考证对应的答卷.
      operationId: getAnswerSheetByExamAticket
      parameters:
        - name: ticket-id
          in: path
          description: 指定考试准考证的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerSheet'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的答卷不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidExamAticket:
                  value:
                    code: 'InvalidExamAticket'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
    patch:
      tags:
        - AnswerSheet
      summary: patch指定的答卷.
      description: patch指定的答卷.
      operationId: patchAnswerSheetByExamAticket
      parameters: 
        - name: ticket-id
          in: path
          description: 指定考试准考证的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerSheetPatch'
      responses:
        '200':
          description: patch成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerSheetPatchedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的AnswerSheet不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                outOfAnswerSheetSubmitDuration:
                  value:
                    code: 'OutOfAnswerSheetSubmitDuration'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /answersheets/to/ticket/{ticket-id}/qureplies:
    put:
      tags:
        - AnswerSheet
      summary: 更新指定答卷下的指定的题目单位作答集.
      description: 更新指定答卷下的指定的题目单位作答集.
      operationId: updateSpecifiedQuReplies
      parameters: 
        - name: ticket-id
          in: path
          description: 指定考试准考证的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsQuRepliesUpdatingReq'
      responses:
        '200':
          description: 更新成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsQuRepliesUpdatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的AnswerSheet不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                outOfAnswerSheetSubmitDuration:
                  value:
                    code: 'OutOfAnswerSheetSubmitDuration'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
  /answersheets/to/ticket/{ticket-id}/epsdetails:
    put:
      tags:
        - AnswerSheet
      summary: 更新指定答卷下的指定的试卷块信息集.
      description: 更新指定答卷下的指定的试卷块信息集.
      operationId: updateSpecifiedEpsDetails
      parameters: 
        - name: ticket-id
          in: path
          description: 指定考试准考证的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsEpsDetailsUpdatingReq'
      responses:
        '200':
          description: 更新成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsEpsDetailsUpdatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的AnswerSheet不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                outOfAnswerSheetSubmitDuration:
                  value:
                    code: 'OutOfAnswerSheetSubmitDuration'
                    detail: '${detail}'
      security:
        - examStationAuth: 
          - client:inner
components:
  schemas:
    ExamQuery:
      type: object
      description: 考试查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        author:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
    ExamPage:
      description: 考试分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/Exam'
              minLength: 0
          required:
            - content
    PubExam:
      type: object
      description: 考试的公开信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        form:
          $ref: '#/components/schemas/ExamForm'
        title:
          $ref: '#/components/schemas/ExamTitle'
        maxRepeatTimes:
          $ref: '#/components/schemas/ExamMaxRepeatTimes'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        currentTime:
          $ref: '#/components/schemas/Timestamp'
        beginTime:
          $ref: '#/components/schemas/ExamBeginTime'
        preEnterDuration:
          $ref: '#/components/schemas/ExamPreEnterDuration'
        postEnterDuration:
          $ref: '#/components/schemas/ExamPostEnterDuration'
        paperPreFetchDuration:
          $ref: '#/components/schemas/ExamPaperPreFetchDuration'
        duration:
          $ref: '#/components/schemas/ExamDuration'
        maxDurationOffset:
          $ref: '#/components/schemas/ExamMaxDurationOffset'
        extFeatures:
          $ref: '#/components/schemas/ExamExtFeatures'
        resources:
          $ref: '#/components/schemas/ExamResources'
      required:
        - id
        - lUTime
        - form
        - title
    ExamChainQuery:
      type: object
      description: 考试链查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        author:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
    ExamChainPage:
      description: 考试链分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ExamChain'
              minLength: 0
          required:
            - content
    PubExamChain:
      type: object
      description: 考试链的公开信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        form:
          $ref: '#/components/schemas/EchainForm'
        title:
          $ref: '#/components/schemas/EchainTitle'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        exams:
          $ref: '#/components/schemas/EchainExams'
        extFeatures:
          $ref: '#/components/schemas/EchainExtFeatures'
        resources:
          $ref: '#/components/schemas/EchainResources'
      required:
        - id
        - lUTime
        - form
        - title
        - exams
    AssessTokensGeneratingReq:
      type: object
      description: |
        生成AssessToken的请求信息.
      properties:
        targetType:
          $ref: '#/components/schemas/AssessTokenTargetType'
        targets:
          $ref: '#/components/schemas/AssessTokenTargets'
        expiresAt:
          $ref: '#/components/schemas/Timestamp'
        codeLength:
          type: integer
          format: int32
          minimum: 8
          maximum: 20
          default: 12
        amount:
          type: integer
          format: int32
          description: 数量.
          minimum: 1
          maximum: 200
        tags:
          $ref: '#/components/schemas/AssessTokenTags'
      required:
        - targetType
        - targets
        - amount
    AssessTokensGeneratedResp:
      type: object
      description: |
        生成AssessToken成功时的响应.
      properties:
        assesstokens:
          type: array
          description: |
            生成的AssessToken列表.
          items:
            $ref: '#/components/schemas/AssessToken'
    AssessTokenQuery:
      type: object
      description: AssessToken查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        creator:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        targetType:
          type: array
          items:
            $ref: '#/components/schemas/AssessTokenTargetType'
          description: =relation=>in.
          minLength: 1
          maxLength: 10
        code:
          type: array
          items: 
            $ref: '#/components/schemas/AssessTokenCode'
          description: 指定所属的集合. =relation=>in.
          minLength: 1
          maxLength: 50
        targets:
          $ref: '#/components/schemas/IdAllMatchQueryField'
        isTaken:
          type: boolean
        taker:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        isExchanged:
          type: boolean
        consumer:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagTitle'
          description: =relation=>all-match.
          minLength: 1
          maxLength: 10
    AssessTokenPage:
      description: AssessToken分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/AssessToken'
              minLength: 0
          required:
            - content
    AssessTokensTakingReq:
      type: object
      description: |
        取占AssessToken的请求信息.
      properties:
        tokensToTake:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
          minLength: 1
          maxLength: 100
      required:
        - tokensToTake
    AssessTokensTakenResp:
      type: object
      description: |
        取占AssessToken成功时的响应.
      properties:
        tokensTaken:
          type: array
          items:
            $ref: '#/components/schemas/AssessToken'
          minLength: 0
      required:
        - tokensTaken
    WhitelistItemsAddingReq:
      type: object
      description: |
        添加白名单项的请求信息.
      properties:
        targetType:
          $ref: '#/components/schemas/WhitelistItemTargetType'
        target:
          $ref: '#/components/schemas/WhitelistItemTarget'
        members:
          type: array
          items:
            $ref: '#/components/schemas/AccountBrief'
          minLength: 1
          maxLength: 200
      required:
        - targetType
        - target
        - members
    WhitelistItemsAddedResp:
      type: object
      description: |
        添加白名单项成功时的响应.
      properties:
        preExistingItems:
          type: array
          items:
            $ref: '#/components/schemas/WhitelistItem'
          minLength: 1
        newItems:
          type: array
          items:
            $ref: '#/components/schemas/WhitelistItem'
          minLength: 1
    WhitelistItemQuery:
      type: object
      description: 白名单项查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        creator:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        targetType:
          type: array
          items:
            $ref: '#/components/schemas/WhitelistItemTargetType'
          description: =relation=>in.
          minLength: 1
          maxLength: 10
        target:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        member:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
    WhitelistItemPage:
      description: WhitelistItem分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/WhitelistItem'
              minLength: 0
          required:
            - content
    ExamAticketAcqBasicReq:
      type: object
      description: 申领考试准考证的基本请求信息.
      properties:
        exam:
          $ref: '#/components/schemas/ObjectID'
        echainTicket:
          $ref: '#/components/schemas/ObjectID'
        name:
          $ref: '#/components/schemas/AccountName'
        gender:
          $ref: '#/components/schemas/Gender'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
        county:
          $ref: '#/components/schemas/County'
        age:
          $ref: '#/components/schemas/Age'
        studyingStatus:
          $ref: '#/components/schemas/StudyingStatus'
        extInfo:
          $ref: '#/components/schemas/ExamAticketExtInfo'
      required:
        - exam
    EnclosedExamAticketAcqReq:
      type: object
      description: 申领Enclosed型考试准考证的请求信息.
      allOf:
        - $ref: '#/components/schemas/ExamAticketAcqBasicReq'
        - type: object
          properties:
            assessToken:
              $ref: '#/components/schemas/AssessTokenCode'
    CooperateExamAticketAcqReq:
      type: object
      description: 申领Cooperate型考试准考证的请求信息.
      allOf:
        - $ref: '#/components/schemas/ExamAticketAcqBasicReq'
        - type: object
          properties:
            owner:
              $ref: '#/components/schemas/ObjectID'
          required:
            - owner
    PublicExamAticketAcqReq:
      type: object
      description: 申领Public型考试准考证的请求信息.
      allOf:
        - $ref: '#/components/schemas/ExamAticketAcqBasicReq'
    ExamAticketUpdatingReq:
      type: object
      description: 考试准考证更新请求.
      properties:
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        name:
          $ref: '#/components/schemas/AccountName'
        gender:
          $ref: '#/components/schemas/Gender'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
        county:
          $ref: '#/components/schemas/County'
        age:
          $ref: '#/components/schemas/Age'
        studyingStatus:
          $ref: '#/components/schemas/StudyingStatus'
        extInfo:
          $ref: '#/components/schemas/ExamAticketExtInfo'
      required:
        - lUTime
    EchainAticketAcqBasicReq:
      type: object
      description: 申领考试链准考证的基本请求信息.
      properties:
        echain:
          $ref: '#/components/schemas/ObjectID'
        name:
          $ref: '#/components/schemas/AccountName'
        gender:
          $ref: '#/components/schemas/Gender'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
        county:
          $ref: '#/components/schemas/County'
        age:
          $ref: '#/components/schemas/Age'
        studyingStatus:
          $ref: '#/components/schemas/StudyingStatus'
        extInfo:
          $ref: '#/components/schemas/ExamAticketExtInfo'
      required:
        - echain
    EnclosedEchainAticketAcqReq:
      type: object
      description: 申领Enclosed型考试链准考证的请求信息.
      allOf:
        - $ref: '#/components/schemas/EchainAticketAcqBasicReq'
        - type: object
          properties:
            assessToken:
              $ref: '#/components/schemas/AssessTokenCode'
    CooperateEchainAticketAcqReq:
      type: object
      description: 申领Cooperate型考试链准考证的请求信息.
      allOf:
        - $ref: '#/components/schemas/EchainAticketAcqBasicReq'
        - type: object
          properties:
            owner:
              $ref: '#/components/schemas/ObjectID'
          required:
            - owner
    PublicEchainAticketAcqReq:
      type: object
      description: 申领Public型考试链准考证的请求信息.
      allOf:
        - $ref: '#/components/schemas/EchainAticketAcqBasicReq'
    EchainAticketUpdatingReq:
      type: object
      description: 考试链准考证更新请求.
      properties:
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        name:
          $ref: '#/components/schemas/AccountName'
        gender:
          $ref: '#/components/schemas/Gender'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
        county:
          $ref: '#/components/schemas/County'
        age:
          $ref: '#/components/schemas/Age'
        studyingStatus:
          $ref: '#/components/schemas/StudyingStatus'
        extInfo:
          $ref: '#/components/schemas/ExamAticketExtInfo'
      required:
        - lUTime
    AnswerSheetSubmission:
      type: object
      description: 提交的答卷信息.
      properties:
        aticket:
          $ref: '#/components/schemas/ObjectID'
        startTime:
          $ref: '#/components/schemas/Timestamp'
        endTime:
          $ref: '#/components/schemas/Timestamp'
        quReplies:
          $ref: '#/components/schemas/AsQuReplies'
        epsDetails:
          $ref: '#/components/schemas/AsEpsDetails'
        extFeedbacks:
          $ref: '#/components/schemas/AsExtFeedbacks'
        resources:
          $ref: '#/components/schemas/AsInputResources'
      required:
        - aticket
        - startTime
    AnswerSheetCreatedResp:
      type: object
      description: 答卷创建成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - lUTime
    AnswerSheetPatch:
      type: object
      description: 答卷Patch.
      properties:
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        endTime:
          $ref: '#/components/schemas/Timestamp'
        quReplies:
          $ref: '#/components/schemas/AsQuReplies'
        epsDetails:
          $ref: '#/components/schemas/AsEpsDetails'
        extFeedbacks:
          $ref: '#/components/schemas/AsExtFeedbacks'
        resources:
          $ref: '#/components/schemas/AsInputResources'
      required:
        - lUTime
    AnswerSheetPatchedResp:
      type: object
      description: 答卷Patch成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - lUTime
    AsQuRepliesUpdatingReq:
      type: object
      description: 指定的题目单位作答集的更新请求.
      properties:
        asLUTime:
          $ref: '#/components/schemas/Timestamp'
        quRepliesToUpdate:
          $ref: '#/components/schemas/AsQuReplies'
    AsQuRepliesUpdatedResp:
      type: object
      description: 指定题目单位作答集更新成功时的响应.
      properties:
        asId:
          $ref: '#/components/schemas/ObjectID'
        asLUTime:
          $ref: '#/components/schemas/Timestamp'
    AsEpsDetailsUpdatingReq:
      type: object
      description: 答卷中指定试卷块信息集的更新请求.
      properties:
        asLUTime:
          $ref: '#/components/schemas/Timestamp'
        epsDetailsToUpdate:
          $ref: '#/components/schemas/AsEpsDetails'
    AsEpsDetailsUpdatedResp:
      type: object
      description: 答卷中指定试卷块信息集更新成功时的响应.
      properties:
        asId:
          $ref: '#/components/schemas/ObjectID'
        asLUTime:
          $ref: '#/components/schemas/Timestamp'
    Exam:
      type: object
      description: 考试.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        author:
          $ref: '#/components/schemas/AccountBrief'
        state:
          $ref: '#/components/schemas/ExamState'
        owner:
          $ref: '#/components/schemas/AccountBrief'
        form:
          $ref: '#/components/schemas/ExamForm'
        title:
          $ref: '#/components/schemas/ExamTitle'
        maxRepeatTimes:
          $ref: '#/components/schemas/ExamMaxRepeatTimes'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        epMoldPool:
          $ref: '#/components/schemas/ExamEpMoldPool'
        beginTime:
          $ref: '#/components/schemas/ExamBeginTime'
        preEnterDuration:
          $ref: '#/components/schemas/ExamPreEnterDuration'
        postEnterDuration:
          $ref: '#/components/schemas/ExamPostEnterDuration'
        paperPreFetchDuration:
          $ref: '#/components/schemas/ExamPaperPreFetchDuration'
        duration:
          $ref: '#/components/schemas/ExamDuration'
        maxDurationOffset:
          $ref: '#/components/schemas/ExamMaxDurationOffset'
        extFeatures:
          $ref: '#/components/schemas/ExamExtFeatures'
        resources:
          $ref: '#/components/schemas/ExamResources'
        tags:
          type: array
          description: 标签集.用于管理.
          items:
            $ref: '#/components/schemas/ExamTagBrief'
      required: 
        - id
        - createTime
        - lUTime
        - author
        - state
        - owner
        - form
        - title
        - epMoldPool
    ExamState:
      type: string
      description: 考试的状态.
      enum: 
        - Preparing
        - Released
        - Discarded
      minLength: 1
      maxLength: 50
    ExamForm:
      type: string
      description: 考试的形式.
      enum:
        - Enclosed
        - Cooperate
        - Public
      minLength: 1
      maxLength: 50
    ExamTitle:
      type: string
      description: 考试标题.
      minLength: 1
      maxLength: 200
    ExamMaxRepeatTimes:
      type: integer
      format: int32
      description: |
        单个用户的最大考试次数.
      minimum: 1
    ExamEpMoldPool:
      type: array
      description: 考试对应的试卷模子池.
      items:
        $ref: '#/components/schemas/EpMoldBrief'
      minLength: 1
      maxLength: 20
    ExamBeginTime:
      type: integer
      format: int64
      description: 考试开始时间(timestamp).
    ExamPreEnterDuration:
      type: integer
      format: int32
      description: 开考前的提前进入时间窗(second).
      minimum: 300
      maximum: 7200
    ExamPostEnterDuration:
      type: integer
      format: int32
      description: 开考后的迟到进入时间窗(second).
      minimum: 60
      maximum: 3600
    ExamPaperPreFetchDuration:
      type: integer
      format: int32
      description: 开考前的提前获取试卷时间窗(second).
      minimum: 30
      maximum: 1800
    ExamDuration:
      type: integer
      format: int32
      description: 考试持续时长(second).
      minimum: 60
    ExamMaxDurationOffset:
      type: integer
      format: int32
      description: 允许的时长顺延最大值(second).
      minimum: 60
      maximum: 3600
    ExamExtFeatures:
      type: object
      description: 考试的扩展特征集,有业务含义.
      additionalProperties:
        $ref: '#/components/schemas/MediumValue'
      minLength: 1
      maxLength: 20
    ExamResources:
      type: array
      description: 对应考试层用到的资源集.
      items:
        $ref: '#/components/schemas/ResourceBrief'
      minLength: 1
      maxLength: 50
    ExamTagBrief:
      type: object
      description: 考试标签的简单形式.
      properties:
        id: 
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/TagTitle'
      required: 
        - id
        - title
    WhitelistItem:
      type: object
      description: | 
        白名单项.
        (targetType,target,member)须确保唯一性.  
        允许添加白名单项的考试类型为 {Enclosed}.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        creator:
          $ref: '#/components/schemas/AccountBrief'
        targetType:
          $ref: '#/components/schemas/WhitelistItemTargetType'
        target:
          $ref: '#/components/schemas/WhitelistItemTarget'
        member:
          $ref: '#/components/schemas/AccountBrief'
      required:
        - id
        - createTime
        - lUTime
        - creator
        - targetType
        - target
        - member
    WhitelistItemTargetType:
      type: string
      description: 白名单项的适用目标类型.
      enum: 
        - Exam
        - ExamChain
    WhitelistItemTarget:
      type: object
      description: |
        白名单项适用的目标.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/WhitelistItemTargetTitle'
      required:
        - id
        - title
    WhitelistItemTargetTitle:
      type: string
      minLength: 1
      maxLength: 200
    ExamChain:
      type: object
      description: |
        考试链.
        ### 可包含的考试类型根据考试链本身的类型对应如下:
          - ExamChain:Enclosed 	=> Exam:{Enclosed} 
          - ExamChain:Cooperate => Exam:{Cooperate} 
          - ExamChain:Public 		=> Exam:{Public} 
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        author:
          $ref: '#/components/schemas/AccountBrief'
        state:
          $ref: '#/components/schemas/EchainState'
        owner:
          $ref: '#/components/schemas/AccountBrief'
        form:
          $ref: '#/components/schemas/EchainForm'
        title:
          $ref: '#/components/schemas/EchainTitle'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        exams:
          $ref: '#/components/schemas/EchainExams'
        epmSerials:
          $ref: '#/components/schemas/EchainEpmSerials'
        extFeatures:
          $ref: '#/components/schemas/EchainExtFeatures'
        resources:
          $ref: '#/components/schemas/EchainResources'
        tags:
          type: array
          description: 标签集.用于管理.
          items:
            $ref: '#/components/schemas/EchainTagBrief'
      required: 
        - id
        - createTime
        - lUTime
        - author
        - state
        - owner
        - form
        - title
        - exams
    EchainState:
      type: string
      description: 考试链的状态.
      enum: 
        - Preparing
        - Released
        - Discarded
      minLength: 1
      maxLength: 50
    EchainForm:
      type: string
      description: 考试链的形式.
      enum:
        - Enclosed
        - Cooperate
        - Public
      minLength: 1
      maxLength: 50
    EchainTitle:
      type: string
      description: 考试链标题.
      minLength: 1
      maxLength: 200
    EchainExams:
      type: array
      description: 考试链对应的考试序列.
      items:
        $ref: '#/components/schemas/ExamBrief'
      minLength: 2
      maxLength: 100
    ExamBrief:
      type: object
      description: 考试的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/ExamTitle'
      required:
        - id
        - title
    EchainEpmSerials:
      type: array
      description: '考试链对应的试卷序列群.指定此属性时,加入考试链的参考人在初始时会被分配确定的试卷序列,由此,其在考试链下的每场考试中的试卷被确定.若未指定此属性,则参考人在考试链下的每场考试中的试卷由具体考试的试卷分配规则确定. 任意两个试卷序列不能完全一致.'
      items:
        type: array
        description: '试卷序列的长度须等于考试序列的长度.'
        items: 
          $ref: '#/components/schemas/EpMoldBrief'
        minLength: 2
        maxLength: 100
      minLength: 1
      maxLength: 100
    EchainExtFeatures:
      type: object
      description: 考试链的扩展特征集,有业务含义.
      additionalProperties:
        $ref: '#/components/schemas/MediumValue'
      minLength: 1
      maxLength: 20
    EchainResources:
      type: array
      description: 对应考试链层用到的资源集.
      items:
        $ref: '#/components/schemas/ResourceBrief'
      minLength: 1
      maxLength: 50
    EchainTagBrief:
      type: object
      description: 考试链标签的简单形式.
      properties:
        id: 
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/TagTitle'
      required: 
        - id
        - title
    EpMoldBrief:
      type: object
      description: 试卷模子的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
        title:
          $ref: '#/components/schemas/EpTitle'
      required:
        - id
        - version
        - title
    AssessToken:
      type: object
      description: |
        测评令牌.
        参加Enclosed型的考试或考试链时提供.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        creator:
          $ref: '#/components/schemas/AccountBrief'
        targetType:
          $ref: '#/components/schemas/AssessTokenTargetType'
        code:
          $ref: '#/components/schemas/AssessTokenCode'
        targets:
          $ref: '#/components/schemas/AssessTokenTargets'
        expiresAt:
          $ref: '#/components/schemas/Timestamp'
        taker:
          $ref: '#/components/schemas/AccountBrief'
        exchanging:
          $ref: '#/components/schemas/AssessTokenExchanging'
        tags:
          $ref: '#/components/schemas/AssessTokenTags'
      required:
        - id
        - createTime
        - lUTime
        - creator
        - targetType
        - code
        - targets
    AssessTokenTargetType:
      type: string
      description: 测评令牌的适用目标类型.
      enum: 
        - Exam
        - ExamChain
    AssessTokenCode:
      type: string
      description: |
        测评令牌码.
        由[大写字母,小写字母,数字]构成.
      minLength: 8
      maxLength: 20
      example:
        aX0s95PtBn
    AssessTokenTargets:
      type: array
      description: |
        测评令牌码适用目标集.
      items:
        $ref: '#/components/schemas/AssessTokenTarget'
      minLength: 1
      maxLength: 25
    AssessTokenTarget:
      type: object
      description: |
        测评令牌码适用的目标.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/AssessTokenTargetTitle'
      required:
        - id
        - title
    AssessTokenTargetTitle:
      type: string
      minLength: 1
      maxLength: 200
    AssessTokenExchanging:
      type: object
      description: |
        测评令牌承兑记录.
      properties:
        applicant:
          $ref: '#/components/schemas/AccountBrief'
        targetId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - applicant
        - targetId
    AssessTokenTags:
      type: array
      items:
        $ref: '#/components/schemas/TagTitle'
      description: |
        测评令牌标签集.
    ExamAticket:
      type: object
      description: |  
        考试对应的准考证.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        exam:
          $ref: '#/components/schemas/ExamBrief'
        owner:
          $ref: '#/components/schemas/ObjectID'
        epMold:
          $ref: '#/components/schemas/ObjectID'
        examPaper:
          $ref: '#/components/schemas/ObjectID'
        name:
          $ref: '#/components/schemas/AccountName'
        gender:
          $ref: '#/components/schemas/Gender'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
        county:
          $ref: '#/components/schemas/County'
        age:
          $ref: '#/components/schemas/Age'
        studyingStatus:
          $ref: '#/components/schemas/StudyingStatus'
        extInfo:
          $ref: '#/components/schemas/ExamAticketExtInfo'
      required:
        - id
        - createTime
        - lUTime
        - exam
        - owner
        - epMold
        - examPaper
    ExamAticketExtInfo:
      type: object
      additionalProperties:
        type: string
        minLength: 1
        maxLength: 250
      minLength: 1
      maxLength: 20
    EchainAticket:
      type: object
      description: |  
        考试链对应的准考证.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        echain:
          $ref: '#/components/schemas/EchainBrief'
        owner:
          $ref: '#/components/schemas/ObjectID'
        epmSerialIndex:
          type: integer
          format: int32
          description: | 
            对应的emp-serial的索引.
          minimum: 0
        examTickets:
          type: array
          description: |
            所辖的各场考试对应的准考证矩阵, 每一行对应一场考试.
          items:
            type: array
            items:
              $ref: '#/components/schemas/ObjectID'
        name:
          $ref: '#/components/schemas/AccountName'
        gender:
          $ref: '#/components/schemas/Gender'
        province:
          $ref: '#/components/schemas/Province'
        city:
          $ref: '#/components/schemas/City'
        county:
          $ref: '#/components/schemas/County'
        age:
          $ref: '#/components/schemas/Age'
        studyingStatus:
          $ref: '#/components/schemas/StudyingStatus'
        extInfo:
          $ref: '#/components/schemas/EchainAticketExtInfo'
      required:
        - id
        - createTime
        - lUTime
        - echain
        - owner
    EchainAticketExtInfo:
      type: object
      additionalProperties:
        type: string
        minLength: 1
        maxLength: 250
      minLength: 1
      maxLength: 20
    EchainBrief:
      type: object
      description: |
        考试链的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/EchainTitle'
      required:
        - id
        - title
    PubEpMold:
      type: object
      description: |
        发布的试卷模子.  
        
        当yieldingMode为Definite时,下属的EpmEpsGenerator只能为确定型的.  
        当yieldingMode为Dynamic时,对下属的EpmEpsGenerator没有限制.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        version:
          $ref: '#/components/schemas/VersioningRef'
        yieldingMode:
          $ref: '#/components/schemas/EpmYieldingMode'
        title:
          $ref: '#/components/schemas/EpTitle'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        epsGenerators:
          $ref: '#/components/schemas/EpmEpsGenerators'
        extFeatures:
          $ref: '#/components/schemas/EpExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpResources'
      required: 
        - id
        - lUTime
        - version
        - yieldingMode
        - title
        - epsGenerators
    EpmYieldingMode:
      type: string
      description: 试卷模子的试卷产出模式.
      enum:
        - Definite
        - Dynamic
      minLength: 1
      maxLength: 50
    EpTitle:
      type: string
      description: 试卷标题.
      minLength: 1
      maxLength: 200
    EpmEpsGenerators:
      type: array
      description: 试卷模子下最顶层的试卷块生成器集合.
      items:
        $ref: '#/components/schemas/CompositeEpsGenerator'
      minLength: 1
      maxLength: 50
    EpExtFeatures:
      type: object
      description: 试卷的扩展特征集,有业务含义.
      additionalProperties:
        $ref: '#/components/schemas/MediumValue'
      minLength: 1
      maxLength: 20
    EpResources:
      type: array
      description: 对应试卷层用到的资源集.
      items:
        $ref: '#/components/schemas/ResourceBrief'
      minLength: 1
      maxLength: 50
    CompositeEpsGenerator:
      type: object
      description: 可复合的试卷块生成器.
      properties:
        title:
          $ref: '#/components/schemas/EpsTitle'
        purpose:
          $ref: '#/components/schemas/EpsPurpose'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        generateStrategy:
          $ref: '#/components/schemas/EpsGenerateStrategy'
        subGenerators:
          type: array
          description: 下属的子生成器集.
          items:
            $ref: '#/components/schemas/CompositeEpsGenerator'
          minLength: 1
          maxLength: 50
        questions:
          type: array
          description: '对应的题集. 当purpose取值为Formal时, 当前试卷块中引入的题目须将answerMatchStrategy, stdAnswers以及对应的资源过滤掉.'
          items:
            $ref: '#/components/schemas/EpQuestion'
          minLength: 1
          maxLength: 2000
        timeLimit:
          $ref: '#/components/schemas/EpsTimeLimit'
        extFeatures:
          $ref: '#/components/schemas/EpsExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpsResources'
      required:
        - title
        - purpose
        - generateStrategy
    EpsTitle:
      type: string
      description: 试卷块标题.
      minLength: 1
      maxLength: 200
    EpsPurpose:
      type: string
      description: 试卷块的用途.
      enum:
        - Formal
        - Practice
        - Example
      minLength: 1
      maxLength: 50
    EpsGenerateStrategy:
      type: object
      description: 试卷块生成策略.
      properties:
        type:
          type: string
          description: 策略类型.
          enum:
            - CompositeFix
            - CompositeRand
            - QSetFix
            - QSetRand
          minLength: 1
          maxLength: 50
        metadata:
          type: object
          description: 策略元数据.用于定义辅助的策略参数.
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 500
          minLength: 1
          maxLength: 50
          example:
            outputEpsCount: 3
            outputQuestionCount: 10
      required: 
        - type
    EpsTimeLimit:
      type: integer
      format: int32
      description: 限时.单位(second).
      minimum: 1
    EpsExtFeatures:
      type: object
      description: 试卷块的扩展特征集,有业务含义.
      additionalProperties:
        $ref: '#/components/schemas/MediumValue'
      minLength: 1
      maxLength: 20
    EpsResources:
      type: array
      description: 对应试卷块层用到的资源集.
      items:
        $ref: '#/components/schemas/ResourceBrief'
      minLength: 1
      maxLength: 50
    EpQuestion:
      type: object
      description: 试卷题目.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
        title:
          $ref: '#/components/schemas/EpQuestionTitle'
        compositeEpQunit:
          $ref: '#/components/schemas/CompositeEpQuestionUnit'
        difficulty:
          $ref: '#/components/schemas/EpQuestionDifficulty'
      required: 
        - id
        - version
        - title
        - compositeEpQunit
    EpQuestionTitle:
      type: string
      description: 题目标题.
      minLength: 1
      maxLength: 200
    EpQuestionDifficulty:
      type: number
      format: float
      description: 题目的难度系数.
    CompositeEpQuestionUnit:
      type: object
      description: 可复合的试卷题目单位.
      properties:
        path:
          $ref: '#/components/schemas/EpQuPath'
        form:
          $ref: '#/components/schemas/EpQuForm'
        stem:
          $ref: '#/components/schemas/RichTextContentField'
        options:
          type: array
          description: 可选项集.仅当形式为选择题时出现.
          items:
            $ref: '#/components/schemas/EpQuOption'
          minLength: 1
          maxLength: 20
        quScore:
          type: number
          format: float
          description: 题目单位的分值.
        answerMatchStrategy:
          $ref: '#/components/schemas/EpAnswerMatchStrategy'
        stdAnswers:
          type: array
          description: 标准答案集.
          items:
            $ref: '#/components/schemas/EpStdAnswer'
          minLength: 1
          maxLength: 20
        subQunits:
          type: array
          description: 下属的题目单位集.
          items:
            $ref: '#/components/schemas/CompositeEpQuestionUnit'
          minLength: 1
          maxLength: 20
        extFeatures:
          type: object
          description: 扩展的特征集,有业务含义.
          additionalProperties:
            $ref: '#/components/schemas/MediumValue'
          minLength: 1
          maxLength: 20
        resources:
          type: array
          description: 当前层面用到的资源集.
          items:
            $ref: '#/components/schemas/ResourceBrief'
          minLength: 1
          maxLength: 50
      required: 
        - form
    EpQuForm:
      type: string
      description: 题目单位的形式.
      enum: 
        - Choice
        - MChoice
        - FillIn
        - QA
        - Composite
      minLength: 1
      maxLength: 50
    EpQuOption:
      type: object
      description: 可选项.
      properties:
        number:
          $ref: '#/components/schemas/NumberField'
        content:
          $ref: '#/components/schemas/RichTextContentField'
      required: 
        - number
        - content
    EpAnswerMatchStrategy:
      type: object
      description: 答案匹配策略.
      properties:
        type:
          type: string
          description: 策略类型.
          enum: 
            - OrderSensitiveEqual
            - OrderInsensitiveEqual
          minLength: 1
          maxLength: 50
        metadata:
          type: object
          description: 策略元数据.用于定义辅助的策略参数.
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 500
          minLength: 1
          maxLength: 50
      required: 
        - type
    EpStdAnswer:
      type: object
      description: 标准答案.
      properties:
        number:
          $ref: '#/components/schemas/NumberField'
        choices:
          type: array
          description: 选择集.用于支持类选择题形式.
          items:
            $ref: '#/components/schemas/NumberField'
          minLength: 1
          maxLength: 20
        criteria:
          type: array
          description: 非选项形式的答案内容集.用于支持非选择题形式.
          items:
            $ref: '#/components/schemas/MediumValue'
          minLength: 1
          maxLength: 20
        score:
          type: number
          format: float
          description: 特定标准答案对应的分值.
      required: 
        - number
    AnswerSheet:
      type: object
      description: 答卷
      properties:
        aticket:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        lUTime:
          $ref: '#/components/schemas/Timestamp'
        startTime:
          $ref: '#/components/schemas/Timestamp'
        endTime:
          $ref: '#/components/schemas/Timestamp'
        quReplies:
          $ref: '#/components/schemas/AsQuReplies'
        epsDetails:
          $ref: '#/components/schemas/AsEpsDetails'
        extFeedbacks:
          $ref: '#/components/schemas/AsExtFeedbacks'
        resources:
          $ref: '#/components/schemas/AsInputResources'
      required: 
        - aticket
        - createTime
        - lUTime
        - startTime
    AsEpsDetails:
      type: object
      description: |
        答卷中的试卷块对应信息集.
        key为对应的EpsPath.
      additionalProperties:
        $ref: '#/components/schemas/AsEpsDetail'
      minLength: 1
    EpsPath:
      type: string
      description: |
        试卷块在试卷中的路径.
        FORMAT => $eps_a_index.$eps_aa_index...
      example:
        1.2
    AsEpsDetail:
      type: object
      description: 答卷中试卷块对应的信息.
      properties:
        startTime:
          $ref: '#/components/schemas/Timestamp'
        endTime:
          $ref: '#/components/schemas/Timestamp'
        extFeedbacks:
          $ref: '#/components/schemas/AsExtFeedbacks'
        resources:
          $ref: '#/components/schemas/AsInputResources'
    AsQuReplies:
      type: object
      description: |
        答卷中的题目单位作答集.
        key为对应的EpQuPath.
      additionalProperties:
        $ref: '#/components/schemas/AsQuReply'
      minLength: 1
    EpQuPath:
      type: string
      description: |
        题目单位在试卷中的路径.
        FORMAT => $eps_a_index.$eps_aa_index.../$qu_b_index.qu_bb_index...
      example:
        1.2/5.3
    AsQuReply:
      type: object
      description: 题目单位作答信息.
      properties:
        startTime:
          $ref: '#/components/schemas/Timestamp'
        endTime:
          $ref: '#/components/schemas/Timestamp'
        choices:
          type: array
          description: 选择集.
          items:
            type: integer
            format: int32
          minLength: 1
          maxLength: 20
        contents:
          type: array
          description: 非选择类型的作答内容集.
          items:
            $ref: '#/components/schemas/InputMediumValue'
          minLength: 1
          maxLength: 20
        extFeedbacks:
          $ref: '#/components/schemas/AsExtFeedbacks'
        resources:
          $ref: '#/components/schemas/AsInputResources'
    AsExtFeedbacks:
      type: object
      description: 答卷中扩展的反馈信息集.
      additionalProperties:
        $ref: '#/components/schemas/InputMediumValue'
      minLength: 1
    AsInputResources:
      type: array
      description: 答卷中传入的资源集.
      items:
        $ref: '#/components/schemas/InputResource'
      minLength: 1
    ExamPaper:
      type: object
      description: 试卷.
      properties:
        id: 
          $ref: '#/components/schemas/ObjectID'
        createTime:
          $ref: '#/components/schemas/Timestamp'
        aticket:
          $ref: '#/components/schemas/EpAticket'
        epMold:
          $ref: '#/components/schemas/VersioningRef'
        mark:
          $ref: '#/components/schemas/EpMark'
        title:
          $ref: '#/components/schemas/EpTitle'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        sections:
          type: array
          description: 包含的试卷块集.
          items:
            $ref: '#/components/schemas/CompositeEpSection'
        extFeatures:
          $ref: '#/components/schemas/EpExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpResources'
      required: 
        - id
        - createTime
        - epMold
        - title
        - sections
    EpAticket:
      type: object
      description: 准考证在试卷内的表示.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        owner:
          $ref: '#/components/schemas/ObjectID'
        exam:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
        - owner
        - exam
    EpMark:
      type: string
      description: 标记.
      minLength: 1
      maxLength: 200
    CompositeEpSection:
      type: object
      description: 可复合的试卷块.
      properties:
        path:
          $ref: '#/components/schemas/EpsPath'
        title:
          $ref: '#/components/schemas/EpsTitle'
        purpose:
          $ref: '#/components/schemas/EpsPurpose'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        subSections:
          type: array
          description: 下属的子试卷块集.
          items:
            $ref: '#/components/schemas/CompositeEpSection'
        questions:
          type: array
          description: 对应的题集.
          items:
            $ref: '#/components/schemas/EpQuestion'
        timeLimit:
          $ref: '#/components/schemas/EpsTimeLimit'
        extFeatures:
          $ref: '#/components/schemas/EpsExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpsResources'
      required: 
        - title
        - purpose
    InputMediumValue:
      type: object
      description: 外部传入的多媒体值.
      properties:
        resourceIndex:
          type: integer
          format: int32
          description: 对应资源在资源表中的索引值.
          minimum: 0
        mediaType:
          $ref: '#/components/schemas/MediaTypeField'
        value:
          type: string
          description: 值.
    InputResource:
      type: object
      description: 外部传入的资源.
      properties:
        id:
          type: string
          description: |
            内部存档后, 该属性用于存储对应的内部ID.
        mediaType:
          $ref: '#/components/schemas/MediaTypeField'
        contentUrl:
          type: string
          description: 资源内容的实际访问地址.
      required: 
        - mediaType
        - contentUrl
    DefaultQuScore:
      type: number
      format: float
      description: 对应范围内缺省的题目单位分值.
    StudyingStatus:
      type: object
      description: 就学信息.
      properties:
        sno:
          type: string
          description: 学号.
          minLength: 1
          maxLength: 50
        school:
          type: string
          description: 学校.
          minLength: 1
          maxLength: 100
        grade:
          $ref: '#/components/schemas/GradeInSchool'
        executiveClass:
          type: string
          description: 行政班级.
          minLength: 1
          maxLength: 20
        chosenSubjects:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
          minLength: 1
          maxLength: 10
        subjectClass:
          type: string
          description: 学科班级.
          minLength: 1
          maxLength: 20
        tutors:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 20
          minLength: 1
          maxLength: 10
      required:
        - sno
        - school
        - grade
    GradeInSchool:
      type: string
      description: 年级
      enum:
        - KG1
        - KG2
        - KG3
        - E1
        - E2
        - E3
        - E4
        - E5
        - E6
        - J1_7
        - J2_8
        - J3_9
        - S1_10
        - S2_11
        - S3_12
      minLength: 1
      maxLength: 50
    Subject:
      type: string
      description: 学科.
      enum:
        - Physics
        - Chemistry
        - Biology
        - History
        - Geography
        - Politics
      minLength: 1
      maxLength: 20
    TagTitle:
      type: string
      description: 不可重复.
      minLength: 1
      maxLength: 25
    ResourceBrief:
      type: object
      description: 资源的简单形式.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
        mediaType:
          $ref: '#/components/schemas/MediaTypeField'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ResourceContentBrief'
          minLength: 1
          maxLength: 5
      required: 
        - id
        - version
        - mediaType
        - contents
    ResourceContentBrief:
      type: object
      description: 资源内容摘要.
      properties:
        number:
          $ref: '#/components/schemas/NumberField'
        quality:
          $ref: '#/components/schemas/ResourceContentQuality'
        size:
          type: integer
          format: int32
          description: File size in bytes.
        duration:
          type: integer
          format: int32
          description: The duration.
        height:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        url:
          type: string
          description: 资源内容的实际访问地址.
          minLength: 1
          maxLength: 250
      required: 
        - number
        - size
        - url
    ResourceContentQuality:
      type: integer
      format: int32
      description: 质量等级.
      minimum: 1
      maximum: 10
    IdAnyMatchQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定的id集合. =relation=>any-match.
      minLength: 1
      maxLength: 50
    IdAllMatchQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定的id集合. =relation=>all-match.
      minLength: 1
      maxLength: 50
    TimeQueryField:
      type: array
      items:
        type: integer
        format: int64
      description: 指定时间所属的区间序列. =relation=>in. 数组长度必须为偶数.
      minLength: 2
      maxLength: 20
    TextSearchSpec:
      type: object
      description: 文本搜索描述对象.
      properties:
        include:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
        exclude:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
    VersioningRefQueryField:
      type: array
      items:
        $ref: '#/components/schemas/VersioningRef'
      description: 指定的VersioningRef集合. =relation=>all.
      minLength: 1
      maxLength: 10
    VersioningRef:
      type: object
      description: 带版本的引用描述符.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
      required:
        - id
    VersionSerial:
      type: integer
      format: int32
      description: |
        版本对应的序号.
      minimum: 0
    AccountBrief:
      type: object
      description: 账户的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        name:
          $ref: '#/components/schemas/AccountName'
        nickname:
          type: string
      required: 
        - id
    AccountName:
      type: string
      minLength: 1
      maxLength: 50
    RichTextContentField:
      type: string
      description: 富文本编辑器输出的内容.
      minLength: 1
      maxLength: 2000
    NumberField:
      type: integer
      format: int32
      description: 编号.编号越小,优先级越高.
      minimum: 0
    MediumValue:
      type: object
      description: '多媒体形式的值.表现为两种形式: a.资源型,此时有效字段为resourceId和mediaType, b.直接文本型,此时有效字段为mediaType和value.'
      properties:
        resourceId:
          $ref: '#/components/schemas/ObjectID'
        mediaType:
          $ref: '#/components/schemas/MediaTypeField'
        value:
          type: string
          description: 值.
          minLength: 1
          maxLength: 1000
      required:
        - mediaType
      example: 
        mediaType: "text/plain"
        value: "tabu"
    MgmtDescriptionField:
      type: string
      description: 用于管理的描述信息.
      minLength: 1
      maxLength: 250
    MediaTypeField:
      type: string
      externalDocs: 
        description: wiki
        url: https://en.wikipedia.org/wiki/Media_type
      description: mime.types
      minLength: 1
      maxLength: 100
    Province:
      type: string
      description: 省.
      minLength: 1
      maxLength: 50
    City:
      type: string
      description: 市.
      minLength: 1
      maxLength: 50
    County:
      type: string
      description: 县.
      minLength: 1
      maxLength: 50
    Age:
      type: integer
      format: int32
      description: 年龄.
      minimum: 0
    Gender:
      type: string
      description: 性取向.
      enum:
        - Masculine
        - Feminine
        - Neutral
      minLength: 1
      maxLength: 50
    Timestamp:
      type: integer
      format: int64
      description: 时间戳.
    ObjectID:
      type: string
      description: MongoDB:ObjectId
      minLength: 24
      maxLength: 24
    ErrorResponse:
      description: 错误响应.
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
        detail:
          type: string
          description: 错误详情.
      required:
        - code
    ErrorResponseCode:
      type: string
      description: 错误码.
      enum: 
        - Undefined
        - LUTimeConflict
        - AlteringNotAllowed
        - DependencyMissed
        - DuplicateCreating
        - UnmatchExamForm
        - UnmatchEchainForm
        - ExceedExamMRTsLimit
        - OutOfExamAticketAcqDuration
        - InvalidAssessToken
        - InvalidEchainAticket
        - ExamAticketGrantingDeny
        - EchainAticketGrantingDeny
        - InvalidExamAticket
        - OutOfPaperFetchDuration
        - OutOfAnswerSheetSubmitDuration
    BasicPage:
      type: object
      description: 分页基本信息.
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
      required: 
        - totalPages
        - totalElements
    PageNumberSpec:
      type: integer
      format: int32
      minimum: 0
      default: 0
    PageSizeSpec:
      type: integer
      format: int32
      minimum: 1
      maximum: 100
      default: 10
    PageSortWithDefaultCreateTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'createTime,desc'
    PageSortWithDefaultLUTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'lUTime,desc'
        
        
  securitySchemes:
    examStationAuth:
      type: oauth2
      flows:
        password:
          tokenUrl: "http://sundial.benbenedu.cn:9001/xauth/oauth/token"
          scopes:
            'client:inner': 内网客户端
  
            
  parameters:
    pageNumber:
      name: page
      in: query
      description: 指定页码.
      schema:
        $ref: '#/components/schemas/PageNumberSpec'
    pageSize:
      name: size
      in: query
      description: 指定页长.
      schema:
        $ref: '#/components/schemas/PageSizeSpec'
    pageSortWithDefaultCreateTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultCreateTimeDescSpec'
      style: form
      explode: true
    pageSortWithDefaultLUTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultLUTimeDescSpec'
      style: form
      explode: true
